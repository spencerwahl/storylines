import{H as m,c as s,z as p}from"./story-JFVOYdrR.js";import{o as n}from"./MeshVertexAttributes-wppAwdFI-C8iWZ1M_.js";import{j as c}from"./vertexSpaceConversion-uj5jLCX_-CvsmZNst.js";import"./main-DL9gKhWh.js";import"./meshProperties-DKeTwzXu-By2C0BTY.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./mat3f64-Dh9_zhFu-BIT-k8Dm.js";import"./mat4-BFStKTjU-1QUGWWek.js";import"./mat4f64-BaJwL7tQ-k0uMm8LY.js";import"./vec32-BuqRmYBM-NaA34lYG.js";import"./spatialReferenceEllipsoidUtils-DlQOpWof-Dfd14ds1.js";import"./computeTranslationToOriginAndRotation-DwwrTl3S-BAuwfISB.js";import"./projection-m8vi7Cxv-DOR8gZiI.js";import"./projectPointToVector-CG1hALQu-B12jgvTU.js";import"./meshVertexSpaceUtils-BwEbYR8F-D9Kxtjw9.js";import"./MeshLocalVertexSpace-DFCiKNRA-DdSLI0u8.js";import"./vec3-CRJiMrND-DCUVBXlw.js";import"./BufferView-BBCzkcZS-OSGSTnvo.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4-DcTMp5mq-CHGE8pY7.js";async function g(r,t,o){await Promise.resolve(),m(o);const i=c(r,t,{useEllipsoid:o?.useEllipsoid});if(!i)throw new s("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const e=r.cloneAndModifyVertexAttributes(new n({...i,uv:p(r.vertexAttributes.uv),color:p(r.vertexAttributes.color)}),t);return e.transform=null,e}export{g as convertMeshVertexSpace};
