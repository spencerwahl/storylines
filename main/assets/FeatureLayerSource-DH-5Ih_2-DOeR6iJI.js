const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/uploadAssets-CC3P1Q4--CA6HV2LN.js","assets/story-ATu2J37h.js","assets/main-b7j9NNmu.js","assets/main-CqTsodum.css","assets/story-C-tj6V1E.css","assets/uuid-Dj9mdEVg-BaKSCiyT.js","assets/External-BcEXC8Ad-CBGmcrf3.js","assets/FeatureType-MZ846Ius-CquNxpRx.js","assets/labelingInfo-D9WqyhOx-CXXGowLc.js","assets/Field-Cj6Pz3TI-D1ZvKULi.js","assets/fieldType-VTpxE-EM-DkUhmiQJ.js","assets/Query-CxQYWcUQ-BZfAtatZ.js","assets/TimeExtent-gZaEUVeW-BsL0M0Mu.js","assets/SimpleRenderer-ADQlYl8U-iiAfTsP7.js","assets/commonProperties-BLIn8DYU-DIWN7Wdp.js","assets/colorRamps-KMmVdCPJ-Cpvkuqx3.js","assets/ColorStop-DoHCvOqO-4EF5lPJS.js","assets/visualVariableUtils-BO-_wo28-D3jY-7qi.js","assets/lengthUtils-wU9RRIqK-kAZpMvZL.js","assets/UniqueValueRenderer-BmoLL_Ee-CalkMm4c.js","assets/diffUtils-BSe9IE26-CtMkJnGJ.js","assets/RendererLegendOptions-f5mIImtQ-DK5aJfdT.js","assets/styleUtils-DxAOZq5S-CwrIUr_E.js","assets/RelationshipQuery-BgG1nLP1-_QTu85s8.js","assets/NormalizationBinParametersMixin-ZkplD1Sk-BrDQZBT_.js","assets/labelUtils-Dd5sr1UJ-BwQ4bTEq.js","assets/MeshTransform-CvTryVbE-CpdoYxex.js","assets/mat4-BFStKTjU-BrMetSop.js","assets/common-CYWrYyJl-E8-sukrT.js","assets/mat4f64-BaJwL7tQ-k0uMm8LY.js","assets/quat-D8L_R4I0-QELNyASo.js","assets/mat3f64-Dh9_zhFu-BIT-k8Dm.js","assets/quatf64-C16JxGFv-BKWK1F8U.js","assets/vec32-BuqRmYBM-DfQoS2md.js","assets/vec42-D8CJyqHG-DnfLTeQH.js","assets/axisAngleDegrees-nTnQhoaG-sJ9Cmh2_.js","assets/meshFeatureAttributes-72y3WnNN-B9Q44GEY.js","assets/convertMeshVertexSpace-B2Ly9R0J-B8KIBjIQ.js","assets/MeshVertexAttributes-wppAwdFI-C6RjuXeZ.js","assets/meshProperties-DKeTwzXu-By2C0BTY.js","assets/vertexSpaceConversion-uj5jLCX_-BEp8iJOQ.js","assets/mat3-DOnW3DjW-C3hbW9XY.js","assets/spatialReferenceEllipsoidUtils-DlQOpWof--3P1D-A5.js","assets/computeTranslationToOriginAndRotation-DwwrTl3S-DapnK-eG.js","assets/projection-m8vi7Cxv-Biai0e9f.js","assets/projectPointToVector-CG1hALQu-U_nWPipN.js","assets/meshVertexSpaceUtils-BwEbYR8F-BEjO0O_U.js","assets/MeshLocalVertexSpace-DFCiKNRA-smpRKvBF.js","assets/vec3-CRJiMrND-CJ6UlIaI.js","assets/BufferView-BBCzkcZS-D7M-8hT-.js","assets/vec2-BnynUbeJ-CKtGJQAy.js","assets/vec4-DcTMp5mq-DzAGILII.js"])))=>i.map(i=>d[i]);
import{_ as M}from"./main-b7j9NNmu.js";import{bw as k,v as E,I as A,t as Q,a3 as U,aw as P,ai as $,a5 as N,b as f,d4 as v,c as S,s as G,X as V,ag as T,A as D,c8 as B,d8 as H,dR as Z,G as X,a8 as x,T as z,cg as W,iQ as J,kO as Y,ao as K,b3 as tt}from"./story-ATu2J37h.js";import{a as et}from"./uuid-Dj9mdEVg-BaKSCiyT.js";import{y as rt}from"./MeshLocalVertexSpace-DFCiKNRA-smpRKvBF.js";import{t as st}from"./meshVertexSpaceUtils-BwEbYR8F-BEjO0O_U.js";import{S as at}from"./External-BcEXC8Ad-CBGmcrf3.js";import{c as it,L as nt,$ as ot}from"./projection-m8vi7Cxv-Biai0e9f.js";import{w as ut}from"./MeshTransform-CvTryVbE-CpdoYxex.js";import{isFeatureIdentifierArrayWithGlobalId as lt,isFeatureIdentifierArrayWithObjectId as dt}from"./editingSupport-Helrs8vX-BlIEcRWb.js";import{d as ct}from"./clientSideDefaults-B-KLKMEC-DMfIa5nK.js";import{C as pt}from"./QueryTask-DjXUtGiO-D-ArM2Cn.js";import{Z as O}from"./labelingInfo-D9WqyhOx-CXXGowLc.js";import{l as ht}from"./FeatureType-MZ846Ius-CquNxpRx.js";import{u as yt}from"./executeQueryJSON-BK4r1MU--Dgbdo56z.js";import{i as mt}from"./FeatureLayer-Co7yvE-_-BX7xqPDT.js";import{b as ft}from"./Query-CxQYWcUQ-BZfAtatZ.js";import{j as gt}from"./TimeExtent-gZaEUVeW-BsL0M0Mu.js";import{B as wt,H as bt,W as It,j as Rt}from"./EditBusLayer-CK3C7PC1-3aNwg7Ds.js";import"./vec32-BuqRmYBM-DfQoS2md.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./mat4-BFStKTjU-BrMetSop.js";import"./mat4f64-BaJwL7tQ-k0uMm8LY.js";import"./quat-D8L_R4I0-QELNyASo.js";import"./mat3f64-Dh9_zhFu-BIT-k8Dm.js";import"./quatf64-C16JxGFv-BKWK1F8U.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./axisAngleDegrees-nTnQhoaG-sJ9Cmh2_.js";import"./normalizeUtils-b-vZURob-gf7DRpqJ.js";import"./utils-DuaeuwP5-BGhKsbts.js";import"./utils-Jw-4AGsF-BUu3WfSi.js";import"./QueryEngineCapabilities-C8pazosU-DZTubngj.js";import"./executeForIds-MucOSmLz-Cs5W7pvu.js";import"./query-nJmB7Ppn-iNdW043N.js";import"./pbfQueryUtils-1j64fqcx-CRZyRaIn.js";import"./pbf-Ijhb7ANA-CT_OemPV.js";import"./memoryEstimations-iHVpvWPf-Cv9_xAG0.js";import"./OptimizedGeometry-1qDYm3YK-DDaO2zRL.js";import"./OptimizedFeatureSet-D6mgsKNr-5TF6-ppW.js";import"./queryZScale-DBCLQqDI-DdNg6_Jj.js";import"./executeQueryPBF-Dc29GEvp-Bnsw-olZ.js";import"./featureConversionUtils-DRaHTjrY-FXw_QE9c.js";import"./FeatureSet-Dxf4LeOj-DHY8m2vi.js";import"./Field-Cj6Pz3TI-D1ZvKULi.js";import"./fieldType-VTpxE-EM-DkUhmiQJ.js";import"./SimpleRenderer-ADQlYl8U-iiAfTsP7.js";import"./commonProperties-BLIn8DYU-DIWN7Wdp.js";import"./colorRamps-KMmVdCPJ-Cpvkuqx3.js";import"./ColorStop-DoHCvOqO-4EF5lPJS.js";import"./visualVariableUtils-BO-_wo28-D3jY-7qi.js";import"./lengthUtils-wU9RRIqK-kAZpMvZL.js";import"./UniqueValueRenderer-BmoLL_Ee-CalkMm4c.js";import"./diffUtils-BSe9IE26-CtMkJnGJ.js";import"./RendererLegendOptions-f5mIImtQ-DK5aJfdT.js";import"./styleUtils-DxAOZq5S-CwrIUr_E.js";import"./RelationshipQuery-BgG1nLP1-_QTu85s8.js";import"./NormalizationBinParametersMixin-ZkplD1Sk-BrDQZBT_.js";import"./labelUtils-Dd5sr1UJ-BwQ4bTEq.js";import"./PortalLayer-rRU66wtN-B9VIHmr8.js";import"./layerContainerType-ChWdCT09-G5sdAsSy.js";import"./ElevationInfo-DkWlof50-EnpLHK9H.js";import"./PortalItem-CJetnHeq-DWncHUve.js";import"./portalItemUtils-DsrxEt4W-D3V_qN1o.js";import"./Layer-B8q-l4yV-D9UCRBXY.js";import"./workers-0oosFQiO-CDZYVQtE.js";import"./Queue-B8H6jIv7-Bt4SWo0b.js";import"./intl-DLmy-Li5-9g31ZT8G.js";import"./ArcGISService-CdvDPeWS-CRDef4Pl.js";import"./ScaleRangeLayer-DIxukUBC-BqLhJc4L.js";import"./jsonUtils-DzmXEA9_-06ImfGWh.js";import"./parser-hXQyB-Qx-CqsnYmad.js";import"./mat4f32-CiZjBg9k-CUm34GoR.js";import"./popupUtils-BiEhUPlu-C6CAQgV5.js";import"./scaleUtils-DtnDbXa5-D9VzC9aL.js";import"./displayFilterUtils-CGSKf3_R-DKBsUaWG.js";import"./FeatureEffect-ChYAnxbf-Dzj60NtX.js";import"./FeatureFilter-C7FajlY_-Cyat_6zI.js";import"./HeightModelInfo-BkDck4B0-JCAjsS7D.js";import"./timeZoneUtils-z3WjfjXQ-EBDyL2Sa.js";import"./jsonUtils-DQiDyVGY-Dz5uhHXm.js";import"./typeUtils-I5iG5ZKA-B3b7ZjMb.js";import"./ClassBreaksRenderer-D97YzbWp-BW4-kxLk.js";import"./LRUCache-BLmkvs7b-Dqihj2AO.js";import"./MemCache-BCippCv6-D7Y11pia.js";import"./Version-BTMwSXf1-D6jVLhhs.js";import"./FieldsIndex-Y7EBAYp0-CW_p8o2C.js";import"./utils-BYqzY6_X-DJROwUHP.js";import"./defaultCIMValues-gWpu7WSC-cjxb95kj.js";import"./enums-f9UUstHQ-hLTu4V1l.js";import"./heatmapUtils--OU2Fakh-Dl636eBC.js";import"./vec4f64-CjUMzAyX-DPYbdAom.js";import"./MD5-CHHr-oed-SuyrCYQ0.js";import"./RefreshableLayer-yYqabqcs-Dy6GvDid.js";import"./TemporalLayer-DxgXU1f--DrA7hA3r.js";import"./versionUtils-DDW8eV12-DkXjaVDA.js";import"./styleUtils-DbPBpaXg-BqnuyGo9.js";import"./interfaces-Cwm0pihk-Ptzy6gTd.js";async function C(e,t,r){const{geometry:s}=t,a={...t.attributes};if(r!=null&&s?.type==="mesh"){const{transformFieldRoles:i}=r,{origin:n,spatialReference:o,vertexSpace:u}=s,d=s.transform??new ut,l=u.type==="local",p=e.spatialReference,I=p.isGeographic,R=W(p,o),h=it(o,p)&&nt(o,p);if(!(l&&I&&h||!l&&!I&&R))return null;const c=ot(n,o,p);if(c==null)return null;if(a[i.originX]=c.x,a[i.originY]=c.y,a[i.originZ]=c.z??0,d!=null){const{translation:q,scale:y,rotation:g}=d,m=l?1:J(o)/J(p);a[i.translationX]=q[0]*m,a[i.translationY]=q[2]*m,a[i.translationZ]=-q[1]*m,a[i.scaleX]=y[0],a[i.scaleY]=y[2],a[i.scaleZ]=y[1],a[i.rotationX]=g[0],a[i.rotationY]=g[2],a[i.rotationZ]=-g[1],a[i.rotationDeg]=g[3]}return{attributes:a}}return s==null?{attributes:a}:s.type==="mesh"||s.type==="extent"?null:{geometry:s.toJSON(),attributes:a}}async function qt(e,t){const r=await Promise.all((t.addAttachments??[]).map(i=>L(e,i))),s=await Promise.all((t.updateAttachments??[]).map(i=>L(e,i))),a=t.deleteAttachments??[];return r.length||s.length||a.length?{adds:r,updates:s,deletes:[...a]}:null}async function L(e,t){const{feature:r,attachment:s}=t,{globalId:a,name:i,contentType:n,data:o,uploadId:u}=s,d={globalId:a};if(r&&("attributes"in r?d.parentGlobalId=r.attributes?.[e.globalIdField]:r.globalId&&(d.parentGlobalId=r.globalId)),u)d.uploadId=u;else if(o){const l=await Y(o);l&&(d.contentType=l.mediaType,d.data=l.data),o instanceof File&&(d.name=o.name)}return i&&(d.name=i),n&&(d.contentType=n),d}function St(e,t,r){if(!t||t.length===0)return[];if(r&&lt(t))return t.map(a=>a.globalId);if(dt(t))return t.map(a=>a.objectId);const s=r?e.globalIdField:e.objectIdField;return s?t.map(a=>a.getAttribute(s)):[]}function _t(e){const t=e?.assetMaps;if(t){for(const a of t.addResults)a.success||x.getLogger("esri.layers.graphics.sources.support.sourceUtils").error(`Failed to map asset to feature with globalId ${a.globalId}.`);for(const a of t.updateResults)a.success||x.getLogger("esri.layers.graphics.sources.support.sourceUtils").error(`Failed to map asset to feature with globalId ${a.globalId}.`)}const r=e?.attachments,s={addFeatureResults:e?.addResults?.map(b)??[],updateFeatureResults:e?.updateResults?.map(b)??[],deleteFeatureResults:e?.deleteResults?.map(b)??[],addAttachmentResults:r?.addResults?r.addResults.map(b):[],updateAttachmentResults:r?.updateResults?r.updateResults.map(b):[],deleteAttachmentResults:r?.deleteResults?r.deleteResults.map(b):[]};return e?.editMoment&&(s.editMoment=e.editMoment),s}function b(e){const t=e.success===!0?null:e.error||{code:void 0,description:void 0};return{objectId:e.objectId,globalId:e.globalId,error:t?new S("feature-layer-source:edit-failure",t.description,{code:t.code}):null}}function F(e,t){return new K({attributes:e.attributes,geometry:tt({...e.geometry,spatialReference:t})})}function Et(e,t){return{adds:e?.adds?.map(r=>F(r,t))||[],updates:e?.updates?.map(r=>({original:F(r[0],t),current:F(r[1],t)}))||[],deletes:e?.deletes?.map(r=>F(r,t))||[],spatialReference:t}}function At(e){const t=e.details.raw,r=+t.code,s=+t.extendedCode;return r===500&&(s===-2147217144||s===-2147467261)}const Ot=new k({originalAndCurrentFeatures:"original-and-current-features",none:"none"}),Ft=new k({Started:"published",Publishing:"publishing",Stopped:"unavailable"});let _=class extends U{constructor(e){super(e),this.type="feature-layer",this.supportedSourceTypes=new Set(["Feature Layer","Oriented Imagery Layer","Table","Catalog Layer"]),this.refresh=P(async()=>{await this.load();const t=this.sourceJSON.editingInfo?.lastEditDate;if(t==null)return{dataChanged:!0,updates:{}};try{await this._fetchService(null)}catch{return{dataChanged:!0,updates:{}}}const r=t!==this.sourceJSON.editingInfo?.lastEditDate;return{dataChanged:r,updates:r?{editingInfo:this.sourceJSON.editingInfo,extent:this.sourceJSON.extent}:null}}),this._ongoingAssetUploads=new Map}load(e){const t=this.layer.sourceJSON,r=this._fetchService(t,{...e}).then(()=>this.layer.setUserPrivileges(this.sourceJSON.serviceItemId,e)).then(()=>this._ensureLatestMetadata(e));return this.addResolvingPromise(r),Promise.resolve(this)}initialize(){this.addHandles([$(()=>{const e=this.layer;return e&&"lastEditsEventDate"in e?e.lastEditsEventDate:null},e=>this._handleLastEditsEventChange(e))])}destroy(){this._removeEditInterceptor()}get queryTask(){const{capabilities:e,parsedUrl:t,gdbVersion:r,spatialReference:s,fieldsIndex:a}=this.layer,i="infoFor3D"in this.layer?this.layer.infoFor3D:null,n="dynamicDataSource"in this.layer?this.layer.dynamicDataSource:null,o=N("featurelayer-pbf")&&e?.query.supportsFormatPBF&&i==null,u=e?.operations?.supportsQueryAttachments??!1;return new pt({url:t.path,pbfSupported:o,fieldsIndex:a,infoFor3D:i,dynamicDataSource:n,gdbVersion:r,sourceSpatialReference:s,queryAttachmentsSupported:u})}async addAttachment(e,t){await this.load();const{layer:r}=this;await O(r,"editing");const s=e.attributes[r.objectIdField],a=r.parsedUrl.path+"/"+s+"/addAttachment",i=this._getLayerRequestOptions(),n=this._getFormDataForAttachment(t,i.query);try{const o=await f(a,{body:n});return b(o.data.addAttachmentResult)}catch(o){throw this._createAttachmentErrorResult(s,o)}}async updateAttachment(e,t,r){await this.load();const{layer:s}=this;await O(s,"editing");const a=e.attributes[s.objectIdField],i=s.parsedUrl.path+"/"+a+"/updateAttachment",n=this._getLayerRequestOptions({query:{attachmentId:t}}),o=this._getFormDataForAttachment(r,n.query);try{const u=await f(i,{body:o});return b(u.data.updateAttachmentResult)}catch(u){throw this._createAttachmentErrorResult(a,u)}}async applyEdits(e,t){await this.load();const{layer:r}=this;await O(r,"editing");const s="infoFor3D"in r?r.infoFor3D:null,a=s!=null,i=a||(t?.globalIdUsed??!1),n=a?await this._uploadMeshesAndGetAssetMapEditsJSON(e):null,o=e.addFeatures?.map(w=>C(this.layer,w,s))??[],u=(await Promise.all(o)).filter(v),d=e.updateFeatures?.map(w=>C(this.layer,w,s))??[],l=(await Promise.all(d)).filter(v),p=St(this.layer,e.deleteFeatures,i);mt(u,l,r.spatialReference);const I=await qt(this.layer,e),R=r.capabilities.editing.supportsAsyncApplyEdits&&a,h=t?.gdbVersion||r.gdbVersion,c={gdbVersion:h,rollbackOnFailure:t?.rollbackOnFailureEnabled,useGlobalIds:i,returnEditMoment:t?.returnEditMoment,usePreviousEditMoment:t?.usePreviousEditMoment,async:R};await wt(this.layer.url,h,!0);const q=bt(this.layer.url,h||null);if(await It(r.url,h,r.historicMoment))throw new S("feature-layer-source:historic-version","Editing a historic version is not allowed");t?.returnServiceEditsOption?(c.edits=JSON.stringify([{id:r.layerId,adds:u.length?u:null,updates:l.length?l:null,deletes:p.length?p:null,attachments:I,assetMaps:n}]),c.returnServiceEditsOption=Ot.toJSON(t?.returnServiceEditsOption),c.returnServiceEditsInSourceSR=t?.returnServiceEditsInSourceSR):(c.adds=u.length?JSON.stringify(u):null,c.updates=l.length?JSON.stringify(l):null,c.deletes=p.length?i?JSON.stringify(p):p.join(","):null,c.attachments=I&&JSON.stringify(I),c.assetMaps=n!=null?JSON.stringify(n):void 0);const y=this._getLayerRequestOptions({method:"post",query:c});q&&(y.authMode="immediate",y.query.returnEditMoment=!0,y.query.sessionId=Rt);const g=t?.returnServiceEditsOption?r.url:r.parsedUrl.path;let m;try{m=R?await this._asyncApplyEdits(g+"/applyEdits",y):await f(g+"/applyEdits",y)}catch(w){if(!At(w))throw w;y.authMode="immediate",m=R?await this._asyncApplyEdits(g+"/applyEdits",y):await f(g+"/applyEdits",y)}return this._createEditsResult(m)}async deleteAttachments(e,t){await this.load();const{layer:r}=this;await O(r,"editing");const s=e.attributes[r.objectIdField],a=r.parsedUrl.path+"/"+s+"/deleteAttachments";try{return(await f(a,this._getLayerRequestOptions({query:{attachmentIds:t.join(",")},method:"post"}))).data.deleteAttachmentResults.map(b)}catch(i){throw this._createAttachmentErrorResult(s,i)}}fetchRecomputedExtents(e={}){const t=e.signal;return this.load({signal:t}).then(async()=>{const r=this._getLayerRequestOptions({...e,query:{returnUpdates:!0}}),{layerId:s,url:a}=this.layer,{data:i}=await f(`${a}/${s}`,r),{id:n,extent:o,fullExtent:u,timeExtent:d}=i,l=o||u;return{id:n,fullExtent:l&&G.fromJSON(l),timeExtent:d&&gt.fromJSON({start:d[0],end:d[1]})}})}async queryAttachments(e,t={}){await this.load();const r=this._getLayerRequestOptions(t);return this.queryTask.executeAttachmentQuery(e,r)}async queryFeatures(e,t){await this.load();const r=await this.queryTask.execute(e,{...t,query:this._createRequestQueryOptions(t)});if(e.outStatistics?.length&&r.features.length){const s=new Map;if(r.features.forEach(a=>{const i=a.attributes;e.outStatistics?.forEach(({outStatisticFieldName:n})=>{if(n){const o=n.toLowerCase();o&&o in i&&n!==o&&(i[n]=i[o],delete i[o],s.set(o,n))}})}),r.fields!=null)for(const a of r.fields){const i=s.get(a.name.toLowerCase());i!=null&&(a.name=i)}}return r}async queryFeaturesJSON(e,t){return await this.load(),this.queryTask.executeJSON(e,{...t,query:this._createRequestQueryOptions(t)})}async queryObjectIds(e,t){return await this.load(),this.queryTask.executeForIds(e,{...t,query:this._createRequestQueryOptions(t)})}async queryFeatureCount(e,t){return await this.load(),this.queryTask.executeForCount(e,{...t,query:this._createRequestQueryOptions(t)})}async queryExtent(e,t){return await this.load(),this.queryTask.executeForExtent(e,{...t,query:this._createRequestQueryOptions(t)})}async queryRelatedFeatures(e,t){return await this.load(),this.queryTask.executeRelationshipQuery(e,{...t,query:this._createRequestQueryOptions(t)})}async queryRelatedFeaturesCount(e,t){return await this.load(),this.queryTask.executeRelationshipQueryForCount(e,{...t,query:this._createRequestQueryOptions(t)})}async queryTopFeatures(e,t){return await this.load(),this.queryTask.executeTopFeaturesQuery(e,{...t,query:this._createRequestQueryOptions(t)})}async queryAttributeBins(e,t){return await this.load(),this.queryTask.executeAttributeBinsQuery(e,{...t,query:this._createRequestQueryOptions(t)})}async queryTopObjectIds(e,t){return await this.load(),this.queryTask.executeForTopIds(e,{...t,query:this._createRequestQueryOptions(t)})}async queryTopExtents(e,t){return await this.load(),this.queryTask.executeForTopExtents(e,{...t,query:this._createRequestQueryOptions(t)})}async queryTopCount(e,t){return await this.load(),this.queryTask.executeForTopCount(e,{...t,query:this._createRequestQueryOptions(t)})}async fetchPublishingStatus(){if(!V(this.layer.url))return"unavailable";const e=T(this.layer.url,"status"),t=await f(e,{query:{f:"json"}});return Ft.fromJSON(t.data.status)}async uploadAssets(e,t){const{uploadAssets:r}=await M(()=>import("./uploadAssets-CC3P1Q4--CA6HV2LN.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36])).then(s=>s.u);return r(e,{layer:this.layer,ongoingUploads:this._ongoingAssetUploads},t)}_handleLastEditsEventChange(e){const t=this.layer;if(e==null||!("capabilities"in t)||!("effectiveCapabilities"in t)||!(!t.capabilities?.operations?.supportsEditing&&t.effectiveCapabilities?.operations?.supportsEditing))return;const r=t.url;r!=null&&("layerId"in t&&T(r,t.layerId.toString()),this._getOrCreateEditInterceptor(r).before=s=>{const a=s.requestOptions.method??"auto";if(a==="auto"||a==="head"){const i=s.requestOptions.query??{};i._ts=e.getTime(),s.requestOptions.query=i}})}_getOrCreateEditInterceptor(e){return this._editInterceptor==null&&(this._editInterceptor={urls:e},D.request.internalInterceptors.push(this._editInterceptor)),this._editInterceptor}_removeEditInterceptor(){this._editInterceptor!=null&&(B(D.request.internalInterceptors,this._editInterceptor),this._editInterceptor=null)}async _asyncApplyEdits(e,t){const r=(await f(e,t)).data.statusUrl;for(;;){const s=(await f(r,{query:{f:"json"},responseType:"json"})).data;switch(s.status){case"Completed":return f(s.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new S("async-applyEdits-failed","asynchronous applyEdits call failed.");case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new S("async-applyEdits-failed","asynchronous applyEdits call failed (undefined response status)")}await H(xt)}}_createRequestQueryOptions(e){const t={...this.layer.customParameters,token:this.layer.apiKey,...e?.query};return this.layer.datesInUnknownTimezone&&(t.timeReferenceUnknownClient=!0),t}async _fetchService(e,t){if(!e){const s={};N("featurelayer-advanced-symbols")&&(s.returnAdvancedSymbols=!0),t?.cacheBust&&(s._ts=Date.now());const{data:a}=await f(this.layer.parsedUrl.path,this._getLayerRequestOptions({query:s,signal:t?.signal}));e=a}this.sourceJSON=await this._patchServiceJSON(e,t?.signal);const r=e.type;if(!this.supportedSourceTypes.has(r))throw new S("feature-layer-source:unsupported-type",`Source type "${r}" is not supported`)}async _patchServiceJSON(e,t){if(e.type!=="Table"&&e.geometryType&&!e?.drawingInfo?.renderer&&!e.defaultSymbol){const r=ct(e.geometryType).renderer;Z("drawingInfo.renderer",r,e)}if(e.geometryType==="esriGeometryMultiPatch"&&e.infoFor3D&&(e.geometryType="mesh"),e.extent==null)try{const{data:r}=await f(this.layer.url,this._getLayerRequestOptions({signal:t}));r.spatialReference&&(e.extent={xmin:0,ymin:0,xmax:0,ymax:0,spatialReference:r.spatialReference})}catch(r){X(r)}return e}async _ensureLatestMetadata(e){if(this.layer.userHasUpdateItemPrivileges&&this.sourceJSON.cacheMaxAge>0)return this._fetchService(null,{...e,cacheBust:!0})}async _uploadMeshesAndGetAssetMapEditsJSON(e){const{addAssetFeatures:t}=e;if(!t?.length||await this._areAllAssetsAlreadyMapped(t))return null;const r=e.addFeatures.filter(i=>i.geometry);if(t.length!==r.length+e.updateFeatures.length)throw new S("feature-layer-source:unsupported-mesh-edits","Mixing attribute only edits with mesh geometry edits is not currently supported");const s=new Array,a=new Map;for(const i of t){const{geometry:n}=i,{vertexSpace:o}=n;if(st(o))s.push(n);else{const u=n.origin,{convertMeshVertexSpace:d}=await M(async()=>{const{convertMeshVertexSpace:p}=await import("./convertMeshVertexSpace-B2Ly9R0J-B8KIBjIQ.js");return{convertMeshVertexSpace:p}},__vite__mapDeps([37,1,2,3,4,38,39,40,41,28,31,27,29,33,42,43,44,45,46,47,48,49,50,34,51])),l=await d(n,new rt({origin:[u.x,u.y,u.z??0]}));a.set(l,n),i.geometry=l,s.push(l)}}await this.uploadAssets(s);for(const[i,n]of a)n.addExternalSources(i.metadata.externalSources.items);return{adds:this._getAssetMapEditsJSON(t),updates:[],deletes:[]}}_getAssetMapEditsJSON(e){const t=new Array,r=this.layer.globalIdField,s=this.layer.parsedUrl;for(const a of e){const i=a.geometry,{metadata:n}=i,o=n.getExternalSourcesOnService(s),u=a.getAttribute(r);if(o.length===0){x.getLogger(this).error(`Skipping feature ${u}. The mesh it is associated with has not been uploaded to the service and cannot be mapped to it.`);continue}const{source:d}=o.find(at)??o[0];for(const l of d)l.parts.length===1?t.push({globalId:et(),parentGlobalId:u,assetName:l.assetName,assetHash:l.parts[0].partHash,flags:[]}):x.getLogger(this).error(`Skipping asset ${l.assetName}. It does not have exactly one part, so we cannot map it to a feature.`)}return t}_createEditsResult(e){const t=e.data,{layerId:r}=this.layer,s=[];let a=null;if(Array.isArray(t))for(const n of t)s.push({id:n.id,editedFeatures:n.editedFeatures}),n.id===r&&(a={addResults:n.addResults??[],updateResults:n.updateResults??[],deleteResults:n.deleteResults??[],attachments:n.attachments,editMoment:n.editMoment});else a=t;const i=_t(a);if(s.length>0){i.editedFeatureResults=[];for(const n of s){const{editedFeatures:o}=n,u=o?.spatialReference?new z(o.spatialReference):null;i.editedFeatureResults.push({layerId:n.id,editedFeatures:Et(o,u)})}}return i}_createAttachmentErrorResult(e,t){const r=t.details.messages?.[0]||t.message,s=t.details.httpStatus||t.details.messageCode;return{objectId:e,globalId:null,error:new S("feature-layer-source:attachment-failure",r,{code:s})}}_getFormDataForAttachment(e,t){const r=e instanceof FormData?e:e&&e.elements?new FormData(e):null;if(r)for(const s in t){const a=t[s];a!=null&&(r.set?r.set(s,a):r.append(s,a))}return r}_getLayerRequestOptions(e={}){const{layer:t,layer:{parsedUrl:r,gdbVersion:s}}=this;return{...e,query:{gdbVersion:s,layer:"dynamicDataSource"in t&&t.dynamicDataSource?JSON.stringify({source:t.dynamicDataSource}):void 0,...r.query,f:"json",...this._createRequestQueryOptions(e)},responseType:"json"}}async _areAllAssetsAlreadyMapped(e){const{layer:t}=this,{globalIdField:r,parsedUrl:s}=t,a="infoFor3D"in t?t.infoFor3D:null;if(a==null||r==null)return!1;const i=ht(a);if(i==null)return!1;const n=T(s.path,`../${i.id}`),o=new Array;for(const h of e){if(!(h.geometry.metadata.getExternalSourcesOnService(s).length>0))return!1;o.push(h)}const u=o.map(h=>h.getAttribute(r)).filter(v);if(u.length===0)return!1;const{assetMapFieldRoles:{parentGlobalId:d,assetHash:l}}=a,p=new ft({where:`${d} IN (${u.map(h=>`'${h}'`)})`,outFields:[l,d],returnGeometry:!1}),I=await yt(n,p),{features:R}=I;return R.length!==0&&!o.some(h=>{const c=h.getAttribute(r);if(!c)return!0;const{metadata:q}=h.geometry,y=R.filter(m=>m.getAttribute(d)===c);if(y.length===0)return!0;const g=y.map(m=>m.getAttribute(l));return q.getExternalSourcesOnService(s).flatMap(({source:m})=>m.flatMap(w=>w.parts.map(j=>j.partHash))).some(m=>g.every(w=>m!==w))})}};E([A()],_.prototype,"type",void 0),E([A({constructOnly:!0})],_.prototype,"layer",void 0),E([A({constructOnly:!0})],_.prototype,"supportedSourceTypes",void 0),E([A({readOnly:!0})],_.prototype,"queryTask",null),_=E([Q("esri.layers.graphics.sources.FeatureLayerSource")],_);const xt=1e3,wr=_;export{wr as default};
