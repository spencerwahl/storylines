import{v as s,I as o,t as w,ai as f,aj as V,aa as S,ao as b,aq as R,d4 as T,a5 as A,b7 as E,R as _,a8 as P,aw as $,s as B,aE as z,b as H,$ as U,c as C,H as L,E as q}from"./story-ATu2J37h.js";import{o as G}from"./GraphicsCollection-rAFZo1AJ-001jZbpx.js";import{o as O,c as M,l as N}from"./RasterVFDisplayObject-CBsAGPRv-DnDrlNGK.js";import{D as j}from"./LayerView2D-CCfp06E--CeiJMXcF.js";import{F as J}from"./GraphicsView2D-yiocyXG3-WWO6sIhM.js";import{d as Q}from"./HighlightGraphicContainer-4ulPEk7p-DMjPUsNh.js";import{l as W,m as K,y as Z}from"./dataUtils-CkgWlGaX-Be5EImdz.js";import{n as X}from"./BitmapContainer-DI2lgxqV-CqDvGHqB.js";import{y as Y}from"./Container-BdpN3llD-Bzc1a46B.js";import{T as tt}from"./BitmapTechnique-BX6dC711-BJ6Ap8V1.js";import{Q as et}from"./ExportStrategy-Cjw5fEcf-DavYD0vj.js";import{a as it,I as rt,q as at}from"./rasterProjectionHelper-BV-HUScL-ChvL484e.js";import{E as D}from"./MapView-BcnxJC0k-C340X_HE.js";import{D as st}from"./WGLContainer-CF3AeUnM-DSonS1N3.js";import{c as ot}from"./timeSupport-XeIgs7eV-AoDDN7Es.js";import{b as nt}from"./Query-CxQYWcUQ-BZfAtatZ.js";import{i as ht}from"./popupUtils-sIuvqRgn-Cu0vSvHx.js";import{v as lt}from"./LayerView-D3XoMhlx-C9n-1qPN.js";import{n as pt}from"./RefreshableLayerView-CB9NNXxL-mRww-9Pl.js";import{w as mt}from"./HighlightDefaults-Cg50f_1y-DfDQi9Xh.js";import"./main-b7j9NNmu.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./VertexArrayObject-DTkLCIKs-CkKLNGKm.js";import"./Texture-DXSFJsEu-Cy6p--50.js";import"./signal-DxzURL18-fdIhxjsR.js";import"./enums-DBi1-Mm2-CUS1pvQe.js";import"./getDataTypeBytes-HSdrWtlL-ClHsCcSN.js";import"./memoryEstimations-iHVpvWPf-Cv9_xAG0.js";import"./VertexElementDescriptor-BAy1DPb3-BOhpDZGx.js";import"./vec2f32-CVhmN3Me-DxoqVD7C.js";import"./dataViewUtils-xig9T3UA-ChZVeYbK.js";import"./BoundingBox-D9JxeQeA-SaxmeIkg.js";import"./utils-C0LvbFCo-RMQaTNpt.js";import"./ReactiveMap-BaMcQuG3-DXMUs6vl.js";import"./layerViewUtils-Bk5QNiAa-BR_lZnpR.js";import"./FieldsIndex-Y7EBAYp0-CW_p8o2C.js";import"./timeZoneUtils-z3WjfjXQ-EBDyL2Sa.js";import"./CIMSymbolHelper-Bcp4nGf3-CjkM50HI.js";import"./BidiEngine-Bdqv5H5j-Dyqh9XG-.js";import"./fontUtils-Ce-zEYaT-BeEifZY4.js";import"./OptimizedGeometry-1qDYm3YK-DDaO2zRL.js";import"./Rect-KI3be8Nv-D7hZd4J5.js";import"./enums-f9UUstHQ-hLTu4V1l.js";import"./utils-BYqzY6_X-DJROwUHP.js";import"./defaultCIMValues-gWpu7WSC-cjxb95kj.js";import"./rasterizingUtils-B8CPqgVl-BqO6dHpT.js";import"./floatRGBA-YJlz5IlR-Cg42kbmo.js";import"./definitions-CBIQmVpq-o3EUznKY.js";import"./mat2d-BQA-1WB--Pnyy0dhf.js";import"./mat2df32-BCnkwMW8-BLRY8i4P.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./OverrideHelper-GkMo7t6B-DROOyeRY.js";import"./colorUtils-DxUhbS7D-BgDtOyGK.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4f64-CjUMzAyX-DPYbdAom.js";import"./callExpressionWithFeature-uWLbeAgq-Doi8mVa6.js";import"./quantizationUtils-Cndke4AR-Bj3TtRmc.js";import"./FeatureMetadata-X_4q5T4e-CG8oaZRp.js";import"./diffUtils-BSe9IE26-CtMkJnGJ.js";import"./UpdateTracking2D-CaPtqow6-BOdJkBAN.js";import"./UpdatingHandles-DBzjq66S-De1O2x-L.js";import"./queryUtils-OXllLZed-y4b04dbE.js";import"./projection-m8vi7Cxv-Biai0e9f.js";import"./normalizeUtils-b-vZURob-gf7DRpqJ.js";import"./utils-DuaeuwP5-BGhKsbts.js";import"./utils-Jw-4AGsF-BUu3WfSi.js";import"./json-BI97KiBB-Ce5cWfI2.js";import"./timeSupport-_0FhDj9z-C-BS_aiV.js";import"./featureConversionUtils-DRaHTjrY-FXw_QE9c.js";import"./OptimizedFeatureSet-D6mgsKNr-5TF6-ppW.js";import"./TimeOnly-C3SOkmg2-BDUsvo_n.js";import"./intl-DLmy-Li5-9g31ZT8G.js";import"./labelUtils-Dd5sr1UJ-BwQ4bTEq.js";import"./FeatureCommandQueue-CqM9cs0l-DSUL5un2.js";import"./TechniqueType-GommNIdJ-ByYTgVOB.js";import"./GraphShaderModule-C7Apfssb-c_dwLfw8.js";import"./FramebufferObject-DQw0QX3p-GuPvNk5F.js";import"./ProgramTemplate-CBS0ERm4-CLVp9mWu.js";import"./ShaderBuilder-BkQM64Qp-BMkrBcLR.js";import"./BindType-CKbZk6AG-Bqvzo9NX.js";import"./lengthUtils-wU9RRIqK-kAZpMvZL.js";import"./QueueProcessor-BtXHzeIT-D70IazIE.js";import"./Queue-B8H6jIv7-Bt4SWo0b.js";import"./Tile-DvzRai0K-Cm4tqncj.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./mat3f64-Dh9_zhFu-BIT-k8Dm.js";import"./normalizeUtilsSync-C40q69cc-CD-ixiZG.js";import"./dehydratedFeatures-CekTKTy7-GhpKvLuF.js";import"./Field-Cj6Pz3TI-D1ZvKULi.js";import"./fieldType-VTpxE-EM-DkUhmiQJ.js";import"./AGraphicContainer-BSUvBxvy-wZTOtC5u.js";import"./TechniqueInstance-oJ4weLzg-BoyV4xVx.js";import"./TileContainer-Dc8VVA_r-_xr_wGVk.js";import"./vec3f32-BS0cezmI-B_madU1n.js";import"./pixelRangeUtils-BteWOAF5-CpV1k138.js";import"./EffectView-Bw7SZPlx-BPrE72bz.js";import"./parser-hXQyB-Qx-CqsnYmad.js";import"./mat4f32-CiZjBg9k-CUm34GoR.js";import"./mat4-BFStKTjU-BrMetSop.js";import"./TileInfo-owTCOSRx-BsVL7ACE.js";import"./TileKey-B_6qmYK--BtZdR-Xy.js";import"./globalCss-CFN4F315-BTfOU6wB.js";import"./Version-BTMwSXf1-D6jVLhhs.js";import"./CollectionFlattener-9hYRBLDX-B7EX3z4o.js";import"./workers-0oosFQiO-CDZYVQtE.js";import"./jsxFactory-C5LxVioS-DJKm_QMv.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./Map-DbZVFU-I-CZVUq4Xn.js";import"./Basemap-DxWxjcEH-BC_WjGnd.js";import"./loadAll-BIhJ1RSe-BFNcZ2A4.js";import"./PortalItem-CJetnHeq-DWncHUve.js";import"./Layer-B8q-l4yV-D9UCRBXY.js";import"./TimeExtent-gZaEUVeW-BsL0M0Mu.js";import"./HeightModelInfo-BkDck4B0-JCAjsS7D.js";import"./IViewEvents-BE10MM98-CvMfjolG.js";import"./a11yUtils-C2ydunC--DtW0nP8S.js";import"./heightModelInfoUtils-CI93rfC7-BboWkOy2.js";import"./ViewingMode-CyR_b1T8-_s7_Gbsk.js";import"./vec2f64-CEUyUoff-BBc0aQ6D.js";import"./Scheduler-Br-2v2ys-Ccy0CMSA.js";import"./vec32-BuqRmYBM-DfQoS2md.js";import"./unitBezier-DhyPAQO8-B9kUb8N6.js";import"./imageUtils-DEFspgr5-D6y05xc2.js";import"./themeUtils-RB4IoNvm-uO-dsvgO.js";import"./ColorBackground-Dcc9SnXm-DOq-ssk8.js";import"./config-DB0LnTDt-CYa9nhWp.js";import"./earcut-XDcq3zAf-BcwyrT7l.js";const ct=t=>{let e=class extends t{constructor(){super(...arguments),this.view=null}get timeExtent(){return ot(this.layer,this.view?.timeExtent,this._get("timeExtent"))}async fetchPopupFeaturesAtLocation(i,r){const{layer:a}=this;if(!i)throw new C("imagerylayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:a});const{popupEnabled:n}=a,h=ht(a,r);if(!n||h==null)return[];const u=await h.getRequiredFields();L(r);const m=new nt;m.timeExtent=this.timeExtent,m.geometry=i,m.outFields=u,m.outSpatialReference=i.spatialReference;const{resolution:c,spatialReference:v}=this.view,g=this.view.type==="2d"?new q(c,c,v):new q(.5*c,.5*c,v),{returnTopmostRaster:d,showNoDataRecords:I}=h.layerOptions||{returnTopmostRaster:!0,showNoDataRecords:!1},k={returnDomainValues:!0,returnTopmostRaster:d,pixelSize:g,showNoDataRecords:I,signal:r?.signal};return a.queryVisibleRasters(m,k).then(F=>F)}async getSourceScale(){return await rt(),await this.layer.load(),at(this.layer.serviceRasterInfo,this.view.spatialReference)}canResume(){return!!super.canResume()&&!this.timeExtent?.isEmpty}};return s([o()],e.prototype,"layer",void 0),s([o()],e.prototype,"suspended",void 0),s([o({readOnly:!0})],e.prototype,"timeExtent",null),s([o()],e.prototype,"view",void 0),e=s([w("esri.views.layers.ImageryLayerView")],e),e};let l=class extends E{constructor(){super(...arguments),this.attached=!1,this.container=new Y,this.updateRequested=!1,this.type="imagery",this._bitmapView=new X}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1}get updating(){return!this.attached||this.isUpdating()}update(t){this.strategy.update(t).catch(e=>{_(e)||P.getLogger(this).error(e)})}hitTest(t){return new b({attributes:{},geometry:t.clone(),layer:this.layer})}attach(){this.container.addChild(this._bitmapView);const t=this.layer.version>=10,e=this.layer.version>=10.1?this.layer.imageMaxHeight:2048,i=this.layer.version>=10.1?this.layer.imageMaxWidth:2048;this.strategy=new et({container:this._bitmapView,imageNormalizationSupported:t,imageMaxHeight:e,imageMaxWidth:i,fetchSource:this._fetchImage.bind(this),requestUpdate:()=>this.requestUpdate()})}detach(){this.strategy.destroy(),this._bitmapView.removeAllChildren(),this.container.removeAllChildren(),this.updateRequested=!1}redraw(){this.strategy.updateExports(async t=>{const{source:e}=t;if(!e||e instanceof ImageBitmap)return;const i=await this.layer.applyRenderer({extent:e.extent,pixelBlock:e.originalPixelBlock??e.pixelBlock});e.filter=r=>this.layer.pixelFilter?this.layer.applyFilter(r):{...i,extent:e.extent}}).catch(t=>{_(t)||P.getLogger(this).error(t)})}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}isUpdating(){return this.strategy.updating||this.updateRequested}getPixelData(){if(this.updating)return null;const t=this.strategy.bitmaps;if(t.length===1&&t[0].source)return{extent:t[0].source.extent,pixelBlock:t[0].source.originalPixelBlock};if(t.length>1){const e=this.view.extent,i=t.map(a=>a.source).filter(a=>a.extent&&a.extent.intersects(e)).map(a=>({extent:a.extent,pixelBlock:a.originalPixelBlock})),r=W(i,e);return r!=null?{extent:r.extent,pixelBlock:r.pixelBlock}:null}return null}async _fetchImage(t,e,i,r){(r=r||{}).timeExtent=this.timeExtent,r.requestAsImageElement=!0,r.returnImageBitmap=!0;const a=await this.layer.fetchImage(t,e,i,r);if(a.imageBitmap)return a.imageBitmap;const n=await this.layer.applyRenderer(a.pixelData,{signal:r.signal}),h=new tt(n.pixelBlock,n.extent?.clone(),a.pixelData.pixelBlock);return h.filter=u=>this.layer.applyFilter(u),h}};s([o()],l.prototype,"attached",void 0),s([o()],l.prototype,"container",void 0),s([o()],l.prototype,"layer",void 0),s([o()],l.prototype,"strategy",void 0),s([o()],l.prototype,"timeExtent",void 0),s([o()],l.prototype,"view",void 0),s([o()],l.prototype,"updateRequested",void 0),s([o()],l.prototype,"updating",null),s([o()],l.prototype,"type",void 0),l=s([w("esri.views.2d.layers.imagery.ImageryView2D")],l);const dt=l;class ut extends st{constructor(){super(...arguments),this.symbolTypes=["triangle"]}prepareRenderPasses(e){const i=e.registerRenderPass({name:"imagery (vf)",brushes:[N],target:()=>this.children,drawPhase:D.MAP});return[...super.prepareRenderPasses(e),i]}doRender(e){this.visible&&e.drawPhase===D.MAP&&this.symbolTypes.forEach(i=>{e.renderPass=i,super.doRender(e)})}}let y=class extends E{constructor(t){super(t),this._loading=null,this.update=$((e,i)=>this._update(e,i).catch(r=>{_(r)||P.getLogger(this).error(r)}))}get updating(){return!!this._loading}redraw(t){if(!this.container.children.length)return;const e=this.container.children[0];e.symbolizerParameters=t,e.invalidateVAO(),this.container.symbolTypes=t.style==="wind_speed"?["scalar","triangle"]:t.style==="simple_scalar"?["scalar"]:["triangle"],this.container.requestRender()}async _update(t,e,i){if(!t.stationary)return;const{extent:r,spatialReference:a}=t.state,n=new B({xmin:r.xmin,ymin:r.ymin,xmax:r.xmax,ymax:r.ymax,spatialReference:a}),[h,u]=t.state.size;this._loading=this.fetchPixels(n,h,u,i);const m=await this._loading;this._addToDisplay(m,e,t.state),this._loading=null}_addToDisplay(t,e,i){if(t.pixelBlock==null)return this.container.children.forEach(h=>h.destroy()),void this.container.removeAllChildren();const{extent:r,pixelBlock:a}=t,n=new M(a);n.offset=[0,0],n.symbolizerParameters=e,n.rawPixelData=t,n.invalidateVAO(),n.x=r.xmin,n.y=r.ymax,n.pixelRatio=i.pixelRatio,n.rotation=i.rotation,n.resolution=i.resolution,n.width=a.width*e.symbolTileSize,n.height=a.height*e.symbolTileSize,this.container.children.forEach(h=>h.destroy()),this.container.removeAllChildren(),this.container.symbolTypes=e.style==="wind_speed"?["scalar","triangle"]:e.style==="simple_scalar"?["scalar"]:["triangle"],this.container.addChild(n)}};s([o()],y.prototype,"fetchPixels",void 0),s([o()],y.prototype,"container",void 0),s([o()],y.prototype,"_loading",void 0),s([o()],y.prototype,"updating",null),y=s([w("esri.views.2d.layers.imagery.ImageryVFStrategy")],y);const yt=y;let p=class extends E{constructor(){super(...arguments),this.attached=!1,this.container=new ut,this.type="imageryVF",this._dataParameters={exportParametersVersion:0,bbox:"",symbolTileSize:0,time:""},this._fetchpixels=async(t,e,i,r)=>{const a=await this._projectFullExtentPromise,{symbolTileSize:n}=this.layer.renderer,{extent:h,width:u,height:m}=K(t,e,i,n,a);if(a!=null&&!a.intersects(t))return{extent:h,pixelBlock:null};const c={bbox:`${h.xmin}, ${h.ymin}, ${h.xmax}, ${h.ymax}`,exportParametersVersion:this.layer.exportImageServiceParameters.version,symbolTileSize:n,time:JSON.stringify(this.timeExtent||"")};if(this._canReuseVectorFieldData(c)){const d=this.getPixelData();if(d!=null&&`${d.extent.xmin}, ${d.extent.ymin}, ${d.extent.xmax}, ${d.extent.ymax}`===c.bbox)return d}const{pixelData:v}=await this.layer.fetchImage(h,u,m,{timeExtent:this.timeExtent,requestAsImageElement:!1,signal:r});this._dataParameters=c;const g=v?.pixelBlock;return g==null?{extent:h,pixelBlock:null}:{extent:h,pixelBlock:this.layer.rasterInfo.dataType==="vector-uv"?Z(g,"vector-uv"):g}}}get updating(){return!this.attached||this._strategy.updating}attach(){this._projectFullExtentPromise=this._getProjectedFullExtent(this.view.spatialReference),this._strategy=new yt({container:this.container,fetchPixels:this._fetchpixels}),this.addHandles(f(()=>this.layer.renderer,t=>this._updateSymbolizerParams(t),z),"attach")}detach(){this._strategy.destroy(),this.container.children.forEach(t=>t.destroy()),this.container.removeAllChildren(),this.removeHandles("attach"),this._strategy=this.container=this._projectFullExtentPromise=null}getPixelData(){const t=this.container.children[0]?.rawPixelData;if(this.updating||!t)return null;const{extent:e,pixelBlock:i}=t;return{extent:e,pixelBlock:i}}hitTest(t){return new b({attributes:{},geometry:t.clone(),layer:this.layer})}update(t){this._strategy.update(t,this._symbolizerParams).catch(e=>{_(e)||P.getLogger(this).error(e)})}redraw(){const{renderer:t}=this.layer;t&&(this._updateSymbolizerParams(t),this._strategy.redraw(this._symbolizerParams))}_canReuseVectorFieldData(t){const e=this._dataParameters.exportParametersVersion===t.exportParametersVersion,i=this._dataParameters.time===t.time,r=this._dataParameters.symbolTileSize===t.symbolTileSize,a=this._dataParameters.bbox===t.bbox;return e&&i&&r&&a}async _getProjectedFullExtent(t){try{return it(this.layer.fullExtent,t)}catch{try{const e=(await H(this.layer.url,{query:{option:"footprints",outSR:U(t),f:"json"}})).data.featureCollection.layers[0].layerDefinition.extent;return e?B.fromJSON(e):null}catch{return null}}}_updateSymbolizerParams(t){t?.type==="vector-field"&&(this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null}))}};s([o()],p.prototype,"attached",void 0),s([o()],p.prototype,"container",void 0),s([o()],p.prototype,"layer",void 0),s([o()],p.prototype,"timeExtent",void 0),s([o()],p.prototype,"type",void 0),s([o()],p.prototype,"view",void 0),s([o()],p.prototype,"updating",null),p=s([w("esri.views.2d.layers.imagery.VectorFieldView2D")],p);const gt=p;let x=class extends ct(pt(j(lt))){constructor(){super(...arguments),this._exportImageVersion=-1,this._highlightGraphics=new G,this._highlightView=void 0,this.layer=null,this.subview=null}get pixelData(){const{subview:t}=this;return this.updating||!t?null:"getPixelData"in t?t.getPixelData():null}update(t){this.subview?.update(t)}attach(){this.layer.increaseRasterJobHandlerUsage(),this._setSubView(),this.view&&(this._highlightView=new J({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new Q(this.view.featuresTilingScheme)}),this.container.addChild(this._highlightView.container)),this.addAttachHandles([f(()=>this.layer.exportImageServiceParameters.version,t=>{t&&this._exportImageVersion!==t&&(this._exportImageVersion=t,this.requestUpdate())},V),f(()=>this.timeExtent,t=>{const{subview:e}=this;e&&(e.timeExtent=t,"redraw"in e?this.requestUpdate():e.redrawOrRefetch())},V),this.layer.on("redraw",()=>{const{subview:t}=this;t&&("redraw"in t?t.redraw():t.redrawOrRefetch())}),f(()=>this.layer.renderer,()=>this._setSubView())])}detach(){this.layer.decreaseRasterJobHandlerUsage(),this.container.removeAllChildren(),this._detachSubview(this.subview),this.subview?.destroy(),this.subview=null,this._highlightView?.destroy(),this._exportImageVersion=-1}viewChange(){}moveEnd(){this.requestUpdate()}highlight(t,e){if(!((Array.isArray(t)?t[0]:S.isCollection(t)?t.at(0):t)instanceof b))return R();let i=[];if(Array.isArray(t)||S.isCollection(t)?i=t.map(a=>a.clone()):t instanceof b&&(i=[t.clone()]),!i?.filter(T)?.length)return R();const r=e?.name??mt;return this._addHighlightGraphics(i,r),R(()=>!this.destroyed&&this._removeHighlightGraphics(i,r))}_addHighlightGraphics(t,e){this._highlightGraphics.addMany(t),this._addHighlights(t.map(i=>i.uid),e)}_removeHighlightGraphics(t,e){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map(i=>i.uid),e)}async doRefresh(){this.requestUpdate()}isUpdating(){const t=!this.subview||this.subview.updating||!!this._highlightView?.updating;return A("esri-2d-log-updating")&&console.log(`Updating ImageryLayerView2D (${this.layer.id}): ${t}
-> subview ${!this.subview||this.subview.updating}
-> higlightView ${this._highlightView?.updating}
`),t}_processHighlight(){const t=this._getHighlights();this._highlightView?.setHighlight(t)}_setSubView(){if(!this.view)return;const t=this.layer.renderer?.type;let e="imagery";if(t==="vector-field"?e="imageryVF":t==="flow"&&(e="flow"),this.subview){const{type:i}=this.subview;if(i===e)return this._attachSubview(this.subview),void(i==="flow"?this.subview.redrawOrRefetch():i==="imagery"&&this.layer.format==="lerc"?this.subview.redraw():this.requestUpdate());this._detachSubview(this.subview),this.subview?.destroy()}this.subview=e==="imagery"?new dt({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):e==="imageryVF"?new gt({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):new O({layer:this.layer,layerView:this}),this._attachSubview(this.subview),this.requestUpdate()}_attachSubview(t){t&&!t.attached&&(t.attach(),t.attached=!0,this.container.addChildAt(t.container,0))}_detachSubview(t){t?.attached&&(this.container.removeChild(t.container),t.detach(),t.attached=!1)}};s([o()],x.prototype,"pixelData",null),s([o()],x.prototype,"subview",void 0),x=s([w("esri.views.2d.layers.ImageryLayerView2D")],x);const zi=x;export{zi as default};
