import{aa as f,v as i,t as v,I as a,aw as C,at as b,aq as U,dq as I,a8 as _,ac as w}from"./story-DhJhOQlv.js";import{D as x}from"./LayerView2D-CCfp06E--Dd7c6nkp.js";import{v as H}from"./LayerView-D3XoMhlx-CvPKZVS_.js";import"./main-DwqK3v0-.js";import"./utils-C0LvbFCo-RMQaTNpt.js";import"./Container-BdpN3llD-DrDQ3EsQ.js";import"./MapView-BcnxJC0k-ByHVSg60.js";import"./globalCss-CFN4F315-HKW4USz5.js";import"./Queue-B8H6jIv7-vS4Plj3c.js";import"./signal-DxzURL18-aQWPiGRD.js";import"./Version-BTMwSXf1-CBRqAjIc.js";import"./CollectionFlattener-9hYRBLDX-BNE1Dkli.js";import"./workers-0oosFQiO-D8sB5_lM.js";import"./intl-DLmy-Li5-a_pYk9gG.js";import"./projection-m8vi7Cxv-BZfe8yqx.js";import"./TileInfo-owTCOSRx-BTOGbR65.js";import"./TileKey-B_6qmYK--BtZdR-Xy.js";import"./jsxFactory-C5LxVioS-BIfkR7HI.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./UpdatingHandles-DBzjq66S-q2p5zfEy.js";import"./Map-DbZVFU-I-BWRbDlCs.js";import"./Basemap-DxWxjcEH-BMYxJT0C.js";import"./loadAll-BIhJ1RSe-DVI0QGoF.js";import"./PortalItem-CJetnHeq-CqntQntK.js";import"./mat4f32-CiZjBg9k-CUm34GoR.js";import"./mat4-BFStKTjU-Dg8LC6zy.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./Layer-B8q-l4yV-PTQJIGUS.js";import"./TimeExtent-gZaEUVeW-Ddmmfvrl.js";import"./GraphicsCollection-rAFZo1AJ-BIXXJEAU.js";import"./HeightModelInfo-BkDck4B0-DI0Pofxk.js";import"./timeZoneUtils-z3WjfjXQ-yvSiCHUR.js";import"./ReactiveMap-BaMcQuG3-Cwy3lwfx.js";import"./Query-CxQYWcUQ-BJbp_nE7.js";import"./Field-Cj6Pz3TI-CtodbzAe.js";import"./fieldType-VTpxE-EM-kB0UJrJc.js";import"./IViewEvents-BE10MM98-CvMfjolG.js";import"./HighlightDefaults-Cg50f_1y-Bl3lRmz8.js";import"./a11yUtils-C2ydunC--pN5KFAYd.js";import"./heightModelInfoUtils-CI93rfC7-B3rCBY7Y.js";import"./ViewingMode-CyR_b1T8-_s7_Gbsk.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./vec2f64-CEUyUoff-BBc0aQ6D.js";import"./mat2d-BQA-1WB--Pnyy0dhf.js";import"./normalizeUtils-b-vZURob-B2Z02Ptb.js";import"./utils-DuaeuwP5-CclCXERz.js";import"./utils-Jw-4AGsF-BJR2c37A.js";import"./mat2df32-BCnkwMW8-BLRY8i4P.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./vec2f32-CVhmN3Me-DxoqVD7C.js";import"./Scheduler-Br-2v2ys-BkxlC00a.js";import"./vec32-BuqRmYBM-D9lBIQtg.js";import"./unitBezier-DhyPAQO8-B9kUb8N6.js";import"./Tile-DvzRai0K-D2SN3El4.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./definitions-CBIQmVpq-o3EUznKY.js";import"./enums-DBi1-Mm2-CUS1pvQe.js";import"./Texture-DXSFJsEu-CbD2pSMt.js";import"./getDataTypeBytes-HSdrWtlL-ClHsCcSN.js";import"./imageUtils-DEFspgr5-DakeMvZf.js";import"./themeUtils-RB4IoNvm-uO-dsvgO.js";import"./ColorBackground-Dcc9SnXm-CPMcE2VQ.js";import"./EffectView-Bw7SZPlx-DHczoDxv.js";import"./parser-hXQyB-Qx-BI9w3Ak1.js";import"./layerViewUtils-Bk5QNiAa-BPguZHVS.js";const y=Symbol(),O=n=>{let e=class extends n{constructor(){super(...arguments),this.layerViews=new f,this._debouncedUpdate=C(async()=>{const{layer:r,parent:o}=this,s=o?.footprintLayerView;let p=[];const m=this._createQuery();if(m&&s){const{features:h}=await s.queryFeatures(m);this.suspended||(p=h.map(u=>r.acquireLayer(u)))}this.removeHandles(y),this.addHandles(p,y)})}get creatingLayerViews(){return this.view?.layerViewManager.isCreatingLayerViewsForLayer(this.layer)??!1}isUpdating(){return this.creatingLayerViews||this.layer.updating||this.layerViews.some(r=>r.updating)}enableLayerUpdates(){return b([this._updatingHandles.addWhen(()=>this.parent?.footprintLayerView?.dataUpdating===!1,()=>this.updateLayers()),this._updatingHandles.add(()=>[this.layer.maximumVisibleSublayers,this.layer.parent?.orderBy,this.parent?.footprintLayerView?.filter,this.parent?.footprintLayerView?.timeExtent,this.suspended],()=>this.updateLayers()),U(()=>this.removeHandles(y))])}updateLayers(){this.suspended?this.removeHandles(y):this._updatingHandles.addPromise(I(this._debouncedUpdate()).catch(r=>{_.getLogger(this).error(r)}))}_createQuery(){const r=this.parent?.footprintLayerView,o=this.layer?.parent;if(!r||!o||o.destroyed)return null;const{layer:{maximumVisibleSublayers:s},view:{scale:p}}=this;if(!s)return null;const{itemTypeField:m,itemSourceField:h,itemNameField:u,minScaleField:c,maxScaleField:L,objectIdField:V,orderBy:S}=o,$=w(`${c} IS NULL OR ${p} <= ${c} OR ${c} = 0`,`${L} IS NULL OR ${p} >= ${L}`),d=S?.find(l=>l.field&&!l.valueExpression),t=r.createQuery();if(t.returnGeometry=!1,t.num=s,t.outFields=[V,h,u],t.where=w(t.where,$),this.unsupportedItemTypes!=null){const l=`${m} NOT IN (${this.unsupportedItemTypes.map(F=>`'${F}'`)})`;t.where=w(t.where,l)}return d?.field&&(t.orderByFields=[`${d.field} ${d.order==="descending"?"DESC":"ASC"}`],t.outFields.push(d.field)),t}};return i([a({readOnly:!0})],e.prototype,"creatingLayerViews",null),i([a()],e.prototype,"layer",void 0),i([a()],e.prototype,"layerViews",void 0),i([a({readOnly:!0})],e.prototype,"unsupportedItemTypes",void 0),i([a()],e.prototype,"parent",void 0),i([a({readOnly:!0})],e.prototype,"isUpdating",null),e=i([v("esri.views.layers.CatalogDynamicGroupLayerView")],e),e};let g=class extends O(x(H)){constructor(){super(...arguments),this.unsupportedItemTypes=["Scene Service"],this.layerViews=new f}attach(){this.addAttachHandles([this.layerViews.on("after-changes",()=>this._updateStageChildren()),this.enableLayerUpdates()])}detach(){this.container.removeAllChildren()}update(n){this.updateLayers()}viewChange(){}moveEnd(){this.requestUpdate()}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((n,e)=>this.container.addChildAt(n.container,e))}};g=i([v("esri.views.2d.layers.CatalogDynamicGroupLayerView2D")],g);const ke=g;export{ke as default};
