import{y as f}from"./utils-DuaeuwP5-BfJmKdyx.js";import{f as l,b as y,ag as c,$ as p,dE as S,cg as g}from"./story-lQeCsWkP.js";import{$ as R}from"./normalizeUtils-b-vZURob-wbRxJavW.js";import{f as d}from"./query-nJmB7Ppn-Ck4nFUt1.js";import{h as x}from"./AttributeBinsFeatureSet-nH3hQICd-B87N4Pwq.js";import E from"./AttributeBinsQuery-BvLa1vu8-DVbf3yQB.js";import"./main-6g5EwhUl.js";import"./utils-Jw-4AGsF-COnE499P.js";import"./pbfQueryUtils-1j64fqcx-C9QQnRFw.js";import"./pbf-Ijhb7ANA-BzCAlCJD.js";import"./memoryEstimations-iHVpvWPf-B5H7s2oc.js";import"./OptimizedGeometry-1qDYm3YK-DufCBcWK.js";import"./OptimizedFeatureSet-D6mgsKNr-ccY18pPi.js";import"./queryZScale-DBCLQqDI-CybIyjeg.js";import"./projection-m8vi7Cxv-jkRqvGTj.js";import"./FeatureSet-Dxf4LeOj-BDoAvYSD.js";import"./Field-Cj6Pz3TI-DppBMP2J.js";import"./fieldType-VTpxE-EM-1mYedx-2.js";import"./queryUtils-OXllLZed-7KMg5JYY.js";import"./json-BI97KiBB-Ce5cWfI2.js";import"./FixedIntervalBinParameters-aoOPIkh7-BZh_3xr3.js";import"./NormalizationBinParametersMixin-ZkplD1Sk-UjpNxtAd.js";import"./Query-CxQYWcUQ-DFYKlyr7.js";import"./TimeExtent-gZaEUVeW-BGgdSLvi.js";import"./timeZoneUtils-z3WjfjXQ-B782RVix.js";function N(o){const i=o.geometry,e=o.toJSON(),t=e;let n,r,m;if(i!=null&&(r=i.spatialReference,m=p(r),t.geometryType=S(i),t.geometry=JSON.stringify(i),t.inSR=m),e.outSR?(t.outSR=p(e.outSR),n=o.outSpatialReference):i&&(t.outSR=t.inSR,n=r),t.bin&&=JSON.stringify(t.bin),t.quantizationParameters&&=JSON.stringify(t.quantizationParameters),t.outStatistics&&=JSON.stringify(t.outStatistics),t.outTimeReference&&=JSON.stringify(t.outTimeReference),e.timeExtent){const u=e.timeExtent,{start:a,end:s}=u;a==null&&s==null||(t.time=a===s?a:`${a??"null"},${s??"null"}`),delete e.timeExtent}return o.defaultSpatialReference&&g(r,n)&&(t.defaultSR=t.inSR,delete t.inSR,delete t.outSR),t}async function O(o,i,e){return i.timeExtent!=null&&i.timeExtent.isEmpty?{data:{features:[]}}:await J(o,i,e)}async function J(o,i,e={}){const t=typeof o=="string"?l(o):o,n=i.geometry?[i.geometry]:[],r=await R(n,null,{signal:e.signal}),m=r?.[0];m!=null&&((i=i.clone()).geometry=m);const u=d({...t.query,f:"json",...N(i)});return y(c(t.path,"queryBins"),{...e,query:{...u,...e.query}})}async function U(o,i,e){const{data:t}=await O(f(o),E.from(i),e);return x.fromJSON(t)}export{U as executeAttributeBinsQuery};
